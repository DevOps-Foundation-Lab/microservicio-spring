# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger: ['feature-ms-ricardodiaz-mensaje']

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build 
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: Gradle@3
      displayName: 'build'
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build jacocoTestReport'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: |
          **/build/libs/*.jar
        targetFolder: '$(Build.ArtifactStagingDirectory)' 
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: appJar
        publishLocation: 'Container'

- stage: Code_Review
  jobs:
  - job: SonarCloud
    displayName: 'Code Review'
    steps:
    - task: SonarCloudPrepare@1
      displayName: 'Sonarqube prepare'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'devops-foundation-lab'
        projectKey: 'microservicio-spring'
        projectName: 'microservicio-spring'
        extraProperties: |
          sonar.coverage.jacoco.xmlReportPaths=$(Pipeline.Workspace)/appJar/build/reports/jacoco/test/jacocoTestReport.xml
    - task: Gradle@3
      displayName: 'SonarQube run'
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build jacocoTestReport'
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: true
        sqGradlePluginVersionChoice: 'specify'
        sonarQubeGradlePluginVersion: '3.3'
    - task: sonarcloud-buildbreaker@2
      displayName: 'SonarQube breaker'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'devops-foundation-lab'

- stage: Deploy 
  jobs:
  - job: deploy
    displayName: 'Deploy'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'appJar'
        downloadPath: '$(Pipeline.Workspace)'
      displayName: Descarga Jar
      
    - script: "mkdir -p build/libs; mv $(Pipeline.Workspace)/appJar/build/libs/ build/; chmod -R 555 build/libs"  
      displayName:  Se mueve JAR a carpeta raiz
      
    - task: Docker@2
      displayName: Docker login
      inputs:
        containerRegistry: 'Docker'
        command: 'login'
    - task: Docker@2
      displayName: 'Docker build & push'
      inputs:
        containerRegistry: 'Docker'
        repository: 'ricdiazb/devops-foundation-lab'
        command: 'buildAndPush'  
        Dockerfile: '**/Dockerfile'